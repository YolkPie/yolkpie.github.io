(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{213:function(t,s,e){"use strict";e.r(s);var n=e(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react-单页应用模板"}},[t._v("react 单页应用模板")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Node 版本要求")]),t._v(" "),e("ol",[e("li",[t._v("推荐使用 "),e("a",{attrs:{href:"https://github.com/creationix/nvm",target:"_blank",rel:"noopener noreferrer"}},[t._v("nvm"),e("OutboundLink")],1),t._v(" 或 "),e("a",{attrs:{href:"https://github.com/coreybutler/nvm-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("nvm-windows"),e("OutboundLink")],1),t._v(" 在同一台电脑中管理多个 Node 版本。")]),t._v(" "),e("li",[t._v("推荐使用 "),e("a",{attrs:{href:"https://github.com/Pana/nrm",target:"_blank",rel:"noopener noreferrer"}},[t._v("nrm"),e("OutboundLink")],1),t._v(" 管理不同npm源，加快npm安装速度")])])]),t._v(" "),e("h3",{attrs:{id:"模板目录结构"}},[t._v("模板目录结构")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("├── deploy                         # 打包后生成的文件\n├── node_modules                   # 安装的依赖\n├── public                         # 静态资源文件夹\n└── src\n    ├── App.jsx || App.ts          # 整体应用\n    ├── App.scss                   # 全局样式\n    ├── index.ts || index.js       # 应用入口文件\n    ├── api                        # 接口\n    ├── assets                     # 项目依赖的一些静态资源\n    ├── components                 # 公共组件\n    ├── router                     # vue-router\n    ├── styles                     # 公共样式\n    ├── pages                      # 页面视图组件\n      ├── pageA                    # 页面A\n        ├── components             # 页面A中使用的组件\n        ├── api.js                 # 页面A中使用的api接口\n        ├── components             # 页面A中使用的组件\n        ├── mock.js                # 页面A中使用mock数据\n├── .babelrc                       # babelh转码配置文件\n├── .browserslistrc                # 在不同的前端工具间共享目标浏览器\n├── .editorconfig                  # 统一编辑器代码风格\n├── .eslintrc.js                   # 代码检查配置文件\n├── .gitignore                     # git忽略文件\n├── package.json                   # npm包描述文件\n├── package-lock.json              # 记录当前状态下实际安装的各个npm package的具体来源和版本号\n├── yarn.lock                      # 使用yarn时记录当前状态下实际安装的各个npm package的具体来源和版本号\n├── postcss.config.js              # css转换规则\n├── tsconfig.json                  # TypeScript配置规则文件\n├── README.md                      # 项目说明\n")])])]),e("h3",{attrs:{id:"相关指令"}},[t._v("相关指令")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("            "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装依赖 或者 yarn install")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run serve          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行项目(本地开发) 或者 npm start")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build:prod     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生产环境打包")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build:dev      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 预发环境打包")]),t._v("\n")])])]),e("h3",{attrs:{id:"本地开发"}},[t._v("本地开发")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[e("code",[t._v("npm install")]),t._v("(安装package.json下项目依赖)；")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[e("code",[t._v("npm run serve")]),t._v("(安装成功后启动项目)；")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("项目在本地"),e("code",[t._v("localhost:8008")]),t._v("端口运行， 默认运行在"),e("code",[t._v("8008")]),t._v("端口，你也可以在"),e("code",[t._v("config/webpack.config.dev.js/devServer")]),t._v("中修改运行的端口；")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[t._v("编译打包：")])]),t._v(" "),e("ul",[e("li",[t._v("npm run build:dev：预发环境打包")]),t._v(" "),e("li",[t._v("npm run build:prod：生产环境打包")])])])]),t._v(" "),e("h3",{attrs:{id:"跨域问题"}},[t._v("跨域问题")]),t._v(" "),e("ul",[e("li",[t._v("配置host：127.0.0.1 dev.*.com")]),t._v(" "),e("li",[t._v("配置devServer的proxy，配置路径为："),e("code",[t._v("config/webpack.config.dev.js -> devServer -> proxy")])])]),t._v(" "),e("h3",{attrs:{id:"开发pc端页面"}},[t._v("开发PC端页面")]),t._v(" "),e("p",[t._v("本模板主要针对移动端开发，采用rem作为尺寸单位，为此使用postcss插件，自动将px转换成rem，同时根据屏幕宽度自动计算根字体大小。")]),t._v(" "),e("p",[t._v("如果想要开发PC页面则需要将上述特性移除：")]),t._v(" "),e("ul",[e("li",[t._v("移除postcss的pxtorem插件，配置路径为：postcss.config.js -> postcss-pxtorem")]),t._v(" "),e("li",[t._v("移除对根字体大小的计算，配置路径为：src/index.js  去掉"),e("code",[t._v("import '@utils/rem'")])])]),t._v(" "),e("h3",{attrs:{id:"commit-message-规范"}},[t._v("commit message 规范")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),e("p",[t._v("commit message 不符合规范将无法提交代码！规范git commit message，具体参考：https://juejin.im/post/5bd2debfe51d457abc710b57")])]),t._v(" "),e("h3",{attrs:{id:"代码规范与格式化"}},[t._v("代码规范与格式化")]),t._v(" "),e("p",[t._v("代码规范标准为"),e("code",[t._v("react/recommended + airbnb")]),t._v("，可以根据团队习惯更改"),e("code",[t._v(".eslintrc.js")]),t._v("。"),e("em",[t._v("务必保持团队代码风格一致")]),t._v("。")]),t._v(" "),e("p",[t._v("建议使用"),e("code",[t._v("prettier")]),t._v("格式化代码，代码编辑使用"),e("code",[t._v("VS Code")]),t._v("，安装"),e("code",[t._v("prettier")]),t._v("扩展，"),e("code",[t._v("shift + alt + f")]),t._v(" 格式化代码。")])])}),[],!1,null,null,null);s.default=r.exports}}]);