webpackJsonp([33],{148:/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/boilerplates/custom/vue-blocks-YolkPhotoSwipe/index.css ***!
  \***********************************************************************************************//*! dynamic exports provided *//*! all exports used */function(a){a.exports="<template>\n  <!--1. \u53D6\u6D88\u4E86photoswipe\u56FE\u7247\u9700\u8BBE\u5B9A\u5C3A\u5BF8\u7684\u8981\u6C42-->\n  <!--2. \u652F\u6301slot\u6269\u5C55\u5934\u90E8\u548C\u5C3E\u90E8\u5185\u5BB9-->\n  <div\n    ref=\"scaler\" class=\"pswp\"\n    :style=\"pswpStyle\"\n    tabindex=\"-1\" role=\"dialog\">\n    <div class=\"pswp__bg\"></div>\n    <div class=\"pswp__scroll-wrap\">\n      <div class=\"pswp__container\">\n        <div class=\"pswp__item\"></div>\n        <div class=\"pswp__item\"></div>\n        <div class=\"pswp__item\"></div>\n      </div>\n      <div class=\"yolk-pswp__header\">\n        <slot name=\"header\"></slot>\n      </div>\n      <div class=\"yolk-pswp__footer\">\n        <slot name=\"footer\"></slot>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n\timport PhotoSwipe from './photoswipe'\n\timport './photoswipe.css'\n\texport default {\n\t\tprops: {\n\t\t\timgList: {\n\t\t\t\ttype: Array,\n\t\t\t\tdefault: []\n      },\n\t\t\toptions: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault () {\n\t\t\t\t\treturn {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpswpStyle: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault () {\n\t\t\t\t\treturn {}\n\t\t\t\t}\n      }\n    },\n    data() {\n\t\t\treturn {\n\t\t\t\tphotoSwipe: null\n      }\n    },\n    methods: {\n\t\t\tinitImgs(imgs) {\n\t\t\t\treturn imgs.map(item => {\n\t\t\t\t\tif (item.w === undefined) {\n\t\t\t\t\t\titem.w = 0\n\t\t\t\t\t\titem.h = 0\n\t\t\t\t\t}\n\t\t\t\t\treturn item\n\t\t\t\t})\n\t\t\t},\n\t\t\tinit(options, imgs) {\n\t\t\t\tconst self = this\n\t\t\t\tthis.imgs = imgs\n\t\t\t\tthis.photoswipe = new PhotoSwipe(this.$el, false, this.imgs, options)\n\t\t\t\tthis.photoswipe.listen('gettingData', function (index, item) {\n\t\t\t\t\tif (!item.w || !item.h) {\n\t\t\t\t\t\tconst img = new Image()\n\t\t\t\t\t\timg.onload = function () {\n\t\t\t\t\t\t\titem.w = this.width\n\t\t\t\t\t\t\titem.h = this.height\n\t\t\t\t\t\t\tself.photoswipe.updateSize(true)\n\t\t\t\t\t\t}\n\t\t\t\t\t\timg.src = item.src\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.photoswipe.init()\n      },\n\t\t\tshow(index) {\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\tthis.$nextTick(() => {\n\t\t\t\t\t\tconst options = {\n\t\t\t\t\t\t\t...this.options,\n\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(this.imgList, 'this.imgList')\n\t\t\t\t\t\tthis.init(options, this.initImgs(this.imgList))\n\t\t\t\t\t\tresolve(this.photoswipe)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t},\n    }\n\t}\n</script>\n<style scoped lang=\"scss\">\n  .yolk-pswp {\n    &__header {\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n    &__footer {\n      position: absolute;\n      left: 0;\n      bottom: 0;\n      width: 100%;\n      min-height: 44px;\n    }\n  }\n</style>\n"}});